name: Chocolatine

"on":
  push:
    branches:
      - "*"
      - "!**dev/*"
      - "!**ga-ignore-*"
  pull_request:
    branches:
      - "*"
      - "!**dev/*"
      - "!**ga-ignore-*"

env:
  MIRROR_URL: git@github.com:EpitechPGE3-2025/G-DEV-500-NAN-5-1-area-7.git

jobs:
  secrets-scan:
    name: Secrets Scan
    runs-on: ubuntu-latest
    if: ${{ github.event.repository.full_name != 'EpitechPGE3-2025/G-DEV-500-NAN-5-1-area-7' }}
    steps:
      - name: Checking Out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: TruffleHog Secret Scanning
        uses: trufflesecurity/trufflehog@main
        with:
          extra_args: --results=verified,unknown

  security-scan-application-server:
    name: Security Scan - Application Server
    runs-on: ubuntu-latest
    needs: secrets-scan
    if: startsWith(github.ref, 'refs/heads/application-server') || github.ref == 'refs/heads/main' || startsWith(github.head_ref, 'application-server') || github.head_ref == 'main'
    steps:
      - name: Checking Out
        uses: actions/checkout@v4

      - name: Setting up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Dependencies
        run: npm install --ignore-scripts
        working-directory: application-server

      - name: Security Audit
        run: npm audit --audit-level=moderate
        working-directory: application-server
        continue-on-error: true

  security-scan-web-client:
    name: Security Scan - Web Client
    runs-on: ubuntu-latest
    needs: secrets-scan
    if: startsWith(github.ref, 'refs/heads/web-client') || github.ref == 'refs/heads/main' || startsWith(github.head_ref, 'web-client') || github.head_ref == 'main'
    steps:
      - name: Checking Out
        uses: actions/checkout@v4

      - name: Setting up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Dependencies
        run: npm install --ignore-scripts
        working-directory: web-client

      - name: Security Audit
        run: npm audit --audit-level=moderate
        working-directory: web-client
        continue-on-error: true

  security-scan-mobile-client:
    name: Security Scan - Mobile Client
    runs-on: ubuntu-latest
    needs: secrets-scan
    if: startsWith(github.ref, 'refs/heads/mobile-client') || github.ref == 'refs/heads/main' || startsWith(github.head_ref, 'mobile-client') || github.head_ref == 'main'
    steps:
      - name: Checking Out
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.5"

      - name: Create .env file
        run: cp .env.example .env
        working-directory: mobile-client

      - name: Install Dependencies
        run: flutter pub get
        working-directory: mobile-client

      - name: Security Audit
        run: dart pub audit
        working-directory: mobile-client
        continue-on-error: true

  check-formatting-application-server:
    name: Check Formatting - Application Server
    runs-on: ubuntu-latest
    needs: secrets-scan
    if: startsWith(github.ref, 'refs/heads/application-server') || github.ref == 'refs/heads/main' || startsWith(github.head_ref, 'application-server') || github.head_ref == 'main'
    steps:
      - name: Checking Out
        uses: actions/checkout@v4

      - name: Setting up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Dependencies
        run: npm install --ignore-scripts
        working-directory: application-server

      - name: Check Formatting
        run: npx prettier --check "src/**/*.ts" "test/**/*.ts"
        working-directory: application-server

  check-formatting-web-client:
    name: Check Formatting - Web Client
    runs-on: ubuntu-latest
    needs: secrets-scan
    if: startsWith(github.ref, 'refs/heads/web-client') || github.ref == 'refs/heads/main' || startsWith(github.head_ref, 'web-client') || github.head_ref == 'main'
    steps:
      - name: Checking Out
        uses: actions/checkout@v4

      - name: Setting up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Dependencies
        run: npm install --ignore-scripts
        working-directory: web-client

      - name: Check Formatting
        run: npm run format:check
        working-directory: web-client

  check-formatting-mobile-client:
    name: Check Formatting - Mobile Client
    runs-on: ubuntu-latest
    needs: secrets-scan
    if: startsWith(github.ref, 'refs/heads/mobile-client') || github.ref == 'refs/heads/main' || startsWith(github.head_ref, 'mobile-client') || github.head_ref == 'main'
    steps:
      - name: Checking Out
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.5"

      - name: Create .env file
        run: cp .env.example .env
        working-directory: mobile-client

      - name: Install Dependencies
        run: flutter pub get
        working-directory: mobile-client

      - name: Check Formatting
        run: dart format --set-exit-if-changed .
        working-directory: mobile-client

  check-linting-application-server:
    name: Check Linting - Application Server
    runs-on: ubuntu-latest
    needs: secrets-scan
    if: startsWith(github.ref, 'refs/heads/application-server') || github.ref == 'refs/heads/main' || startsWith(github.head_ref, 'application-server') || github.head_ref == 'main'
    steps:
      - name: Checking Out
        uses: actions/checkout@v4

      - name: Setting up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Dependencies
        run: npm install --ignore-scripts
        working-directory: application-server

      - name: Lint
        run: npm run lint
        working-directory: application-server

  check-linting-web-client:
    name: Check Linting - Web Client
    runs-on: ubuntu-latest
    needs: secrets-scan
    if: startsWith(github.ref, 'refs/heads/web-client') || github.ref == 'refs/heads/main' || startsWith(github.head_ref, 'web-client') || github.head_ref == 'main'
    steps:
      - name: Checking Out
        uses: actions/checkout@v4

      - name: Setting up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Dependencies
        run: npm install --ignore-scripts
        working-directory: web-client

      - name: Lint
        run: npm run lint
        working-directory: web-client

  check-linting-mobile-client:
    name: Check Linting - Mobile Client
    runs-on: ubuntu-latest
    needs: secrets-scan
    if: startsWith(github.ref, 'refs/heads/mobile-client') || github.ref == 'refs/heads/main' || startsWith(github.head_ref, 'mobile-client') || github.head_ref == 'main'
    steps:
      - name: Checking Out
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.5"

      - name: Install Dependencies
        run: flutter pub get
        working-directory: mobile-client

      - name: Create .env file
        run: cp .env.example .env
        working-directory: mobile-client
      - name: Analyze
        run: flutter analyze
        working-directory: mobile-client

  build-application-server:
    name: Build Application Server
    runs-on: ubuntu-latest
    needs:
      [
        security-scan-application-server,
        check-formatting-application-server,
        check-linting-application-server,
      ]
    if: startsWith(github.ref, 'refs/heads/application-server') || github.ref == 'refs/heads/main' || startsWith(github.head_ref, 'application-server') || github.head_ref == 'main'
    steps:
      - name: Checking Out
        uses: actions/checkout@v4

      - name: Setting up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Installing Dependencies
        run: npm install --ignore-scripts
        working-directory: application-server

      - name: Building Application Server
        run: npm run build
        working-directory: application-server

      - name: Upload Application Server Build
        uses: actions/upload-artifact@v4
        with:
          name: application-server-dist
          path: application-server/dist
          retention-days: 7

  build-web-client:
    name: Build Web Client
    runs-on: ubuntu-latest
    needs:
      [
        security-scan-web-client,
        check-formatting-web-client,
        check-linting-web-client,
      ]
    if: startsWith(github.ref, 'refs/heads/web-client') || github.ref == 'refs/heads/main' || startsWith(github.head_ref, 'web-client') || github.head_ref == 'main'
    steps:
      - name: Checking Out
        uses: actions/checkout@v4

      - name: Setting up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Installing Dependencies
        run: npm install --ignore-scripts
        working-directory: web-client

      - name: Building Web Client
        run: npm run build
        working-directory: web-client

      - name: Upload Web Client Build
        uses: actions/upload-artifact@v4
        with:
          name: web-client-dist
          path: web-client/dist
          retention-days: 7

  build-mobile-client:
    name: Build Mobile Client
    runs-on: ubuntu-latest
    needs:
      [
        security-scan-mobile-client,
        check-formatting-mobile-client,
        check-linting-mobile-client,
      ]
    if: startsWith(github.ref, 'refs/heads/mobile-client') || github.ref == 'refs/heads/main' || startsWith(github.head_ref, 'mobile-client') || github.head_ref == 'main'
    steps:
      - name: Checking Out
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android SDK components
        run: |
          sdkmanager "platforms;android-34" "build-tools;34.0.0" "ndk;25.2.9519653"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.5"

      - name: Create .env file
        run: cp .env.example .env
        working-directory: mobile-client

      - name: Decode and setup keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          if [ -n "$KEYSTORE_BASE64" ]; then
            echo "$KEYSTORE_BASE64" | base64 -d > ${{ github.workspace }}/keystore.jks
            echo "KEYSTORE_FILE=${{ github.workspace }}/keystore.jks" >> $GITHUB_ENV
            echo "KEYSTORE_PASSWORD=$KEYSTORE_PASSWORD" >> $GITHUB_ENV
            echo "KEY_ALIAS=$KEY_ALIAS" >> $GITHUB_ENV
            echo "KEY_PASSWORD=$KEY_PASSWORD" >> $GITHUB_ENV
          fi

      - name: Installing Dependencies
        run: flutter pub get
        working-directory: mobile-client

      - name: Clean build directory
        run: flutter clean
        working-directory: mobile-client

      - name: Regenerate Android files
        run: |
          rm -rf android/app/src/main/java
          flutter create --platforms=android .
        working-directory: mobile-client

      - name: Accept Android licenses
        run: yes | flutter doctor --android-licenses
        working-directory: mobile-client

      - name: Verify Flutter configuration
        run: flutter doctor -v
        working-directory: mobile-client

      - name: Build APK
        run: flutter build apk --release --verbose
        working-directory: mobile-client

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: mobile-client-apk
          path: mobile-client/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30

  test-application-server:
    name: Test Application Server
    runs-on: ubuntu-latest
    needs: build-application-server
    if: startsWith(github.ref, 'refs/heads/application-server') || github.ref == 'refs/heads/main' || startsWith(github.head_ref, 'application-server') || github.head_ref == 'main'
    steps:
      - name: Checking Out
        uses: actions/checkout@v4

      - name: Setting up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Installing Dependencies
        run: npm install --ignore-scripts
        working-directory: application-server

      - name: Running Unit Tests
        run: npm run test:cov
        working-directory: application-server

      # - name: Running Integration Tests
      #   run: npm run test:e2e
      #   working-directory: application-server

      - name: Upload Test Coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: application-server-coverage
          path: application-server/coverage
          retention-days: 7

  test-web-client:
    name: Test Web Client
    runs-on: ubuntu-latest
    needs: build-web-client
    if: startsWith(github.ref, 'refs/heads/web-client') || github.ref == 'refs/heads/main' || startsWith(github.head_ref, 'web-client') || github.head_ref == 'main'
    steps:
      - name: Checking Out
        uses: actions/checkout@v4

      - name: Setting up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Installing Dependencies
        run: npm install --ignore-scripts
        working-directory: web-client

      - name: Running Tests
        run: npm run test:run -- --coverage
        working-directory: web-client

      - name: Upload Test Coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: web-client-coverage
          path: web-client/coverage
          retention-days: 7

  test-mobile-client:
    name: Test Mobile Client
    runs-on: ubuntu-latest
    needs: build-mobile-client
    if: startsWith(github.ref, 'refs/heads/mobile-client') || github.ref == 'refs/heads/main' || startsWith(github.head_ref, 'mobile-client') || github.head_ref == 'main'
    steps:
      - name: Checking Out
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.5"

      - name: Create .env file
        run: cp .env.example .env
        working-directory: mobile-client

      - name: Installing Dependencies
        run: flutter pub get
        working-directory: mobile-client

      - name: Running Tests
        run: flutter test --coverage
        working-directory: mobile-client

      - name: Generate Coverage Report
        run: |
          sudo apt-get update
          sudo apt-get install -y lcov
          genhtml coverage/lcov.info -o coverage/html
        working-directory: mobile-client

      - name: Upload Test Coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mobile-client-coverage
          path: mobile-client/coverage
          retention-days: 7

  repository_mirroring:
    name: Repository Mirroring
    runs-on: ubuntu-latest
    needs: [test-application-server, test-web-client, test-mobile-client]
    steps:
      - name: Checking Out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Mirroring
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }} # valid-secret
